type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Item {
  name: String!
}

type Stat {
  name: String!
  baseStat: Int!
}

type Sprites {
  backDefault: String!
  frontDefault: String!
}

type PokemonNode {
  id: Int!
  name: String!
  baseExperience: Int!
  height: Int!
  order: Int!
  weight: Int!
  abilities: [Item]!
  heldItems: [Item]!
  moves: [Item]!
  sprites: Sprites!
  stats: [Stat]!
  types: [Item]!
}

type PokemonEdge {
  cursor: String!
  node: PokemonNode
}

type PokemonConnection {
  edges: [PokemonEdge]
  pageInfo: PageInfo!
}

input StringFilterInput {
  contains: String
}

input PokemonFilterInput {
  name: StringFilterInput
  species: String
  type: String
}

type Query {
  getPokemon(name: String!): PokemonNode
  listPokemon(
    filter: PokemonFilterInput
    # sort: PokemonSortInput
    first: Int
    after: String
  ): PokemonConnection
  # countPokemon(filter: PokemonFilterInput): Int
}
